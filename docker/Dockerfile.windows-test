# Windows Build Test Dockerfile using Wine
# This allows testing Windows MSVC compilation on Linux/macOS hosts
#
# Note: This uses Wine to emulate Windows environment for testing purposes.
# For production Windows builds, use native Windows or GitHub Actions.

FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive

# Install Wine and dependencies for Windows cross-compilation
RUN dpkg --add-architecture i386 && \
    apt-get update && \
    apt-get install -y \
    wine64 \
    wine32 \
    winetricks \
    wget \
    curl \
    git \
    cmake \
    ninja-build \
    mingw-w64 \
    g++-mingw-w64-x86-64 \
    python3.11 \
    python3.11-dev \
    python3-pip \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Set Python 3.11 as default
RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1

# Upgrade pip
RUN python3 -m pip install --upgrade pip setuptools wheel

# Install vcpkg for Windows dependencies
ENV VCPKG_ROOT=/opt/vcpkg
RUN git clone https://github.com/microsoft/vcpkg.git ${VCPKG_ROOT} && \
    cd ${VCPKG_ROOT} && \
    ./bootstrap-vcpkg.sh && \
    ln -s ${VCPKG_ROOT}/vcpkg /usr/local/bin/vcpkg

# Pre-install Windows dependencies via vcpkg (x64-windows triplet)
RUN vcpkg install \
    openssl:x64-mingw-static \
    nghttp2:x64-mingw-static \
    zlib:x64-mingw-static \
    --clean-after-build

ENV VCPKG_DEFAULT_TRIPLET=x64-mingw-static

# Set working directory
WORKDIR /workspace

# Copy project files
COPY . .

# Install Python dependencies
RUN pip install -e ".[dev]"

# Build script for MinGW cross-compilation (simulates Windows build)
RUN echo '#!/bin/bash\n\
echo "=== Building httpmorph for Windows (MinGW-w64) ==="\n\
export CC=x86_64-w64-mingw32-gcc\n\
export CXX=x86_64-w64-mingw32-g++\n\
export VCPKG_ROOT=/opt/vcpkg\n\
python3 setup.py build_ext --compiler=mingw32 2>&1 | tee build.log\n\
if [ $? -eq 0 ]; then\n\
    echo "✅ Windows build succeeded!"\n\
    exit 0\n\
else\n\
    echo "❌ Windows build failed!"\n\
    echo "=== Build Log ==="\n\
    cat build.log\n\
    exit 1\n\
fi\n\
' > /usr/local/bin/build-windows && chmod +x /usr/local/bin/build-windows

# Default command: show help
CMD ["bash", "-c", "echo 'Windows Build Test Environment'; echo ''; echo 'Commands:'; echo '  build-windows    - Build for Windows using MinGW-w64'; echo '  bash             - Interactive shell'; echo ''; echo 'Note: This uses MinGW cross-compiler to test Windows compatibility.'; echo 'For true MSVC testing, use GitHub Actions or native Windows.'"]
